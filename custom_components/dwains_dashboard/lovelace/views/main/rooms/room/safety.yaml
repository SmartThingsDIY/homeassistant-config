# dwains_dashboard

#Page for devices for a room

{% for room in _dd_config.rooms %}
{% if room["safety"] %}
- title: {{ room["name"] }} {{ _dd_trans.safety.title_plural }}
  path: room_{{ room["name"]|lower|replace("'", "_")|replace(" ", "_") }}_safety
  type: custom:dwains-dashboard
  visible: false
  cards:    
    - type: vertical-stack
      cards:
        #Header
        - type: custom:dwains-header-card
          title:  {{ _dd_trans.safety.title_plural }}
          subtitle: {{ room["name"] }}
          navigation_path: room_{{ room["name"]|lower|replace("'", "_")|replace(" ", "_") }}  
          icon: {{ _dd_icons.menu_back|default('mdi:chevron-left') }}
        #Start for room devices content page
        {% if room["safety"].split('.')[0] == 'safety' %}
        # this room has only 1 device
        {% else %}
        # this room has group of devices
        - type: custom:dwains-auto-entities-card
          filter:
            include:
              - group: {{ room["safety"] }}
                options:
                  type: custom:button-card
                  template: room_safety
                  icon: >
                    [[[
                      let conf = {{ _dd_config.global["safety_ok_strings"] | tojson }};
                      let ok_states = (Array.isArray(conf) && conf.length) ? conf : 'off';

                      if(ok_states.includes(entity.state))
                        return "{{ _dd_icons.safety_ok|default('mdi:shield-check') }}";
                      else
                        return "{{ _dd_icons.safety_alert|default('mdi:shield-alert-outline') }}";
                    ]]]
                  tap_action:
                    action: more-info
          sort:
            method: name
            ignore_case: true
          card:
            type: custom:dwains-flexbox-card
            padding: true
            items_classes: 'col-xs-12 col-sm-6 col-md-3 col-lg-3'
        {% endif %}
{% endif %}
{% endfor %}